class Sector{constructor({rows:rows,name:name,mirrored:mirrored,sectorId:sectorId,vert:vert,hor:hor,angle:angle,offset:offset}){this.rows=[],this.name=name,this.vert=vert,this.hor=hor,this.angle=angle,this.sectorId=sectorId,this.mirrored=mirrored,this.seatNumber=0,this.offset=offset,rows.forEach((rowConf,rowNr)=>{const row=new Row({rowConf:rowConf,rowNr:rowNr,sectorId:sectorId,sectorName:name});return this.seatNumber+=row.seatNumber,this.rows.push(row),this})}render(parent){const sectorContainer=createDOMElem({tag:div,attrs:{class:`sector-container ${this.name.replaceAll(" ","-").replaceAll(".","")}`,id:`sectorId-${this.sectorId}`},style:{top:`${this.vert}%`,left:`${this.hor}%`,transform:`translate(-50%,-50%) rotate(${this.angle||0}deg)`},parent:parent,children:[{tag:div,attrs:{class:"title"},children:[{tag:p,content:this.name}]}]});this.rows.forEach(row=>{row.render(sectorContainer,this.mirrored,this.offset)})}}
//# sourceMappingURL=Sector.min.js.map