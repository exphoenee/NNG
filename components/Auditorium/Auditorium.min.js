class Auditorium{constructor(sectors){return this.sectors=[],this.seatNumber=0,this.wheighting={rowNumber:10,sectorIndex:1e3,positionIndex:1,neighboursPrice:100},sectors.forEach((sectorConf,sectorId)=>{const sector=new Sector({...sectorConf,sectorId:sectorId});this.seatNumber+=sector.seatNumber,this.sectors.push(sector)}),this}randomReservation(ammount=0){if(ammount<.2)console.error("The amount of reserved seat must be over 20% of the entire seats!");else{const allSeats=this.getAllSeats(),seatNr=allSeats.length;do{allSeats[Math.round(Math.random()*(seatNr-1))].setOccupied("Random")}while(auditorium.getOccupiedSeats().length<=Math.ceil(seatNr*ammount))}}reserve({min:min,max:max}){let results=[];return this.sectors.forEach(sector=>{sector.rows.forEach(row=>{const rowLength=row.seatsNumber;for(let i=0;i<row.seatsNumber-max;i++){const nextNeighbours=row.seats.slice(i,i+ +max),isAllFree=nextNeighbours.map(seat=>seat.occupied).every(seat=>!seat);if(isAllFree){const neighboursPrice=nextNeighbours.map(seat=>4-seat.seatCategory.category).reduce((sum,category)=>sum+category)/(4*max),positionIndex=(1+nextNeighbours.map(seat=>seat.seatPosPreference).reduce((a,b)=>a+b))/rowLength/2,rowNumber=row.rowNr+1,sectorIndex=sector.sectorPreference/4,factors={rowNumber:rowNumber,sectorIndex:sectorIndex,positionIndex:positionIndex,neighboursPrice:neighboursPrice};let wheigtedFactors={...factors};Object.keys(wheigtedFactors).forEach(index=>wheigtedFactors[index]=factors[index]*this.wheighting[index]);let positionValue=1;Object.keys(wheigtedFactors).forEach(index=>positionValue+=wheigtedFactors[index]);const seatText=nextNeighbours.map(seat=>seat.seatNr+1).join(", "),neighboursText=`Sector: ${nextNeighbours[0].sectorName} | row#: ${rowNumber} | seat#: ${seatText} | value: ${positionValue}`;results.push({sectorName:sector.name,rowNumber:rowNumber,seatNumbers:seatText,...wheigtedFactors,positionValue:positionValue})}}})}),results.length?console.table(results.sort((a,b)=>a.positionValue-b.positionValue)):console.log("Unfortunatelly there is no solution..."),results}getSeatNumber(){return this.seatNumber}getAllSeats(){return this.sectors.map(sector=>sector.getAllSeats()).flat(1)}getOccupiedSeats(){return this.sectors.map(sector=>sector.getOccupiedSeats()).flat(1)}getFreeSeats(){return this.sectors.map(sector=>sector.getFreeSeats()).flat(1)}freeUpAllSeats(){this.getAllSeats().forEach(seat=>seat.setFree())}render(parent="app"){this.addPanel();const auditoriumElem=createDOMElem({tag:div,attrs:{class:"auditorium"},parent:parent});this.sectors.forEach(sector=>{sector.render(auditoriumElem)})}addPanel(){createDOMElem({tag:div,attrs:{class:"panel"},style:{position:"fixed",bottom:0,left:0,padding:"10px",margin:"10px"},children:[createDOMElem({tag:div,attrs:{class:"reserve-panel"},children:[createDOMElem({tag:input,attrs:{type:"number",id:"max",value:4},style:{width:"60px"}}),createDOMElem({tag:button,attrs:{class:"reserve"},handleEvent:{event:"click",cb:()=>{this.reserve({min:2,max:+document.getElementById("max").value||4})}},content:"reserve"})]}),createDOMElem({tag:div,attrs:{class:"reserve-panel"},children:[createDOMElem({tag:input,attrs:{type:"number",step:"0.1",min:"0.1",max:"1",id:"random",value:.2},style:{width:"60px"}}),createDOMElem({tag:button,attrs:{class:"randomize"},handleEvent:{event:"click",cb:()=>{this.freeUpAllSeats(),this.randomReservation(+document.getElementById("random").value)}},content:"randomize"})]})]})}}
//# sourceMappingURL=Auditorium.min.js.map