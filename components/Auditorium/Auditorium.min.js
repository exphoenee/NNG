class Auditorium{constructor(sectors){return this.sectors=[],this.seatNumber=0,sectors.forEach((sectorConf,sectorId)=>{const sector=new Sector({...sectorConf,sectorId:sectorId});this.seatNumber+=sector.seatNumber,this.sectors.push(sector)}),this}randomReservation(ammount=0){if(ammount<.2)console.error("The amount of reserved seat must be over 20% of the entire seats!");else{const allSeats=this.getAllSeats(),seatNr=allSeats.length;do{allSeats[Math.round(Math.random()*(seatNr-1))].setOccupied("Random")}while(auditorium.getOccupiedSeats().length<=Math.ceil(seatNr*ammount))}}reserve({min:min,max:max}){let results=[];this.sectors.forEach(sector=>{sector.rows.forEach(row=>{for(let i=0;i<row.seatsNumber-max+1;i++){const nextNeighbours=row.seats.slice(i,i+max),isAllFree=nextNeighbours.map(seat=>seat.occupied).every(seat=>!seat);if(isAllFree){const neighboursPrice=nextNeighbours.map(seat=>4-seat.seatCategory.category).reduce((sum,category)=>sum+category),positionIndex=nextNeighbours.map(seat=>seat.seatPosPreference).reduce((a,b)=>a+b)/max,rowNumber=row.rowNr+1,positionValue=rowNumber*sector.sectorPreference*positionIndex*neighboursPrice,seatText=nextNeighbours.map(seat=>seat.seatNr+1).join(", "),neighboursText=`Sector: ${nextNeighbours[0].sectorName} | row#: ${nextNeighbours[0].rowNr} | seat#: ${seatText} | value: ${positionValue}`;results.push({neighbours:nextNeighbours,seatNumbers:seatText,neighboursText:neighboursText,sectorName:sector.name,rowNumber:rowNumber,sectorPreference:sector.sectorPreference,positionIndex:positionIndex,neighboursPrice:neighboursPrice,positionValue:positionValue})}}})}),console.table(results.sort((a,b)=>a.positionValue-b.positionValue))}getSeatNumber(){return this.seatNumber}getAllSeats(){return this.sectors.map(sector=>sector.getAllSeats()).flat(1)}getOccupiedSeats(){return this.sectors.map(sector=>sector.getOccupiedSeats()).flat(1)}getFreeSeats(){return this.sectors.map(sector=>sector.getFreeSeats()).flat(1)}render(parent="app"){const auditoriumElem=createDOMElem({tag:div,attrs:{class:"auditorium"},parent:parent});this.sectors.forEach(sector=>{sector.render(auditoriumElem)})}}
//# sourceMappingURL=Auditorium.min.js.map